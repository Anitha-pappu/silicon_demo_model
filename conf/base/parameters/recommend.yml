# This is a boilerplate parameters config file the for the recommend pipeline.
recommend:
  controlled_parameters:
    - name: starch_flow
      op_min: 3000
      op_max: 4000
      step_size: 200
      max_delta: 800
    - name: amina_flow
      op_min: 450
      op_max: 650
      step_size: 50
      max_delta: 100
    - name: ore_pulp_flow
      op_min: 400
      op_max: 410
      step_size: 2
      max_delta: 10
    - name: ore_pulp_ph
      op_min: 9.5
      op_max: 10.5
      step_size: 0.05
      max_delta: 0.4
    - name: ore_pulp_density
      op_min: 1.65
      op_max: 1.75
      step_size: 0.1
      max_delta: 0.1
    - name: total_air_flow
      op_min: 1000
      op_max: 2000
      step_size: 100
      max_delta: 500
    - name: total_column_level
      op_min: 1000
      op_max: 5000
      step_size: 200
      max_delta: 1000

  problem_factory:
    type: set_point_optimization_kedro.problem_factory.StatefulOptimizationProblem

  # Sample problem definition, typically SOProblem is enough but sense might be changed
  problem:
    type: optimizer.problem.StatefulOptimizationProblem
    kwargs:
      sense: minimize

  # Sample solver definition.
  # Check out different solvers and their kwargs in `oai.optimizer` docs
  solver:
    type: optimizer.solvers.DifferentialEvolutionSolver
    kwargs:
      sense: minimize
      seed: 0
      maxiter: 100
      mutation: [0.5, 1.0]
      recombination: 0.7
      strategy: best1bin

  # Sample stopper definition.
  # Check out different stoppers and their kwargs in `oai.optimizer` docs
  stopper:
    type: optimizer.stoppers.NoImprovementStopper
    kwargs:
      patience: 10
      min_delta: 0.1
      sense: minimize

  optimize:
    # number of cores to use for optimization
    n_jobs: 1

  actual_target_column: "silica_conc"

  objective_units: "%"
  
  cra_export:
    # Timestamp format for runs to be sent to CRA
    timestamp_format: "%Y-%m-%d %H:%M:%S"
    # Timestamp column name
    timestamp_column: "timestamp"
    # Target column name
    target_col: "silica_conc"
    # Column names of relevant data for `prepare_predictions` method
    cols_export:
      baseline: model_prediction
      optimized: value_after_recs

  imp_tracking:
    # Time between the solution timestamp and the timestamp where the implementation is
    # checked
    offset: "3H"
    # Method to calculate the implementation percentage
    method: "progress"
    # Parameters specific to the method
    imp_tracking_params:
      clip: False


